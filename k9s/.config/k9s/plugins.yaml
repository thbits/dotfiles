# watch events on selected resources
# requires linux "watch" command
# change '-n' to adjust refresh time in seconds

plugins:
  watch-events:
    shortCut: Shift-E
    confirm: false
    description: Get Events
    scopes:
    - all
    command: sh
    background: false
    args:
    - -c
    - "watch -n 2 kubectl get events --context $CONTEXT --namespace $NAMESPACE --field-selector involvedObject.name=$NAME"

  #--- Create debug container for selected pod in current namespace
  # See https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#ephemeral-container
  debug:
    shortCut: Shift-D
    description: Add debug container
    scopes:
      - containers
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - "kubectl debug -it -n=$NAMESPACE $POD --target=$NAME --image=nicolaka/netshoot:v0.11 --share-processes -- bash"

# View user-supplied values when the helm chart was created
  helm-values:
    shortCut: v
    confirm: false
    description: Values
    scopes:
    - helm
    command: sh
    background: false
    args:
    - -c
    - "helm get values $COL-NAME -n $NAMESPACE --kube-context $CONTEXT | less"

  log-less:
    shortCut: Shift-L
    description: "logs | less"
    scopes:
    - po
    command: bash
    background: false
    args:
    - -c
    # - '"$@" | less -KR'
    - '"$@" | bat --paging=always --style=plain -l log'
    - dummy-arg
    - kubectl
    - logs
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --kubeconfig
    - $KUBECONFIG

  log-less-container:
    shortCut: Shift-L
    description: "logs | less"
    scopes:
    - containers
    command: bash
    background: false
    args:
    - -c
    - '"$@" | less -K'
    - dummy-arg
    - kubectl
    - logs
    - -f
    - -c
    - $NAME
    - $POD
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
    - --kubeconfig
    - $KUBECONFIG 

  eks-node-viewer:
    shortCut: Shift-X
    description: "eks-node-viewer"
    scopes:
      - node
    background: false
    command: bash
    args:
    - -c
    - |
      env $(kubectl config view --context $CONTEXT --minify -o json | jq -r ".users[0].user.exec.env[] | select(.name == \"AWS_PROFILE\") | \"AWS_PROFILE=\" + .value" && kubectl config view --context $CONTEXT --minify -o json | jq -r ".users[0].user.exec.args | \"AWS_REGION=\" + .[1]") eks-node-viewer --context $CONTEXT --resources cpu,memory --extra-labels karpenter.sh/nodepool,eks-node-viewer/node-age --node-sort=creation=dsc

  node-shell:
    # Define a mnemonic to invoke the plugin
    # Shortcut key to execute the plugin (e.g., 's' key)
    shortCut: s  
    # Whether or not to prompt for user confirmation before executing the plugin
    confirm: false
    # Description of the plugin (displayed in the k9s UI)
    description: "Node shell"
    # Collections of views that support this shortcut. (You can use `all`)
    # `node` indicates that the plugin operates on `node` kubernetes resources
    scopes:
      - node
    # The command to run upon invocation. Can use Krew plugins here too!
    command: sh
    # Whether or not to run the command in background mode
    background: false
    # Defines the command arguments
    args:
      - -c
      - "kubectl node-shell $NAME --context $CONTEXT"

  edit-secret:
    shortCut: Ctrl-X
    confirm: false
    description: "Edit Decoded Secret"
    scopes:
      - secrets
    command: kubectl
    background: false
    args:
      - modify-secret
      - --namespace
      - $NAMESPACE
      - --context
      - $CONTEXT
      - $NAME
